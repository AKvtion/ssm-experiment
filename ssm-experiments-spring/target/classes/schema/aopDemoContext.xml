<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <bean id="logAspect"
          class="org.liangfacan53.courses.sf.ssm.spring.schema.aop.LoggingAspect"/>
    <!-- target object -->
    <bean id="aopDemo"
          class="org.liangfacan53.courses.sf.ssm.spring.schema.aop.AopDemo"/>
    <aop:config>
        <!-- aspect config -->
        <aop:aspect ref="logAspect">
            <!-- pointcut -->
            <aop:pointcut id="aopDemoPointCut"
                          expression="execution(* org.liangfacan53.courses.sf.ssm.spring.schema.aop.*.*(..))"/>
            <aop:before method="beforeMethod" pointcut-ref="aopDemoPointCut"/>
            <aop:after method="afterMethod" pointcut-ref="aopDemoPointCut"/>
            <aop:after-returning method="afterMethodReturning" pointcut-ref="aopDemoPointCut"/>
            <aop:after-throwing method="afterMethodThrowing" pointcut-ref="aopDemoPointCut"/>
            <aop:around method="aroundMethod" pointcut-ref="aopDemoPointCut"/>
        </aop:aspect>
    </aop:config>
</beans>
